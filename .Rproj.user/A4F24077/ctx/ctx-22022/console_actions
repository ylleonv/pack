{
    "data" : [
        "\nR version 3.4.4 (2018-03-15) -- \"Someone to Lean On\"\nCopyright (C) 2018 The R Foundation for Statistical Computing\nPlatform: x86_64-pc-linux-gnu (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x55af6e9d4210>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "           [,1]\n [1,] 0.7310586\n [2,] 0.8807971\n [3,] 0.9996646\n [4,] 0.9998766\n [5,] 0.9933071\n [6,] 0.9933071\n [7,] 0.9820138\n [8,] 0.9996646\n [9,] 0.9996646\n[10,] 0.9998766\n[11,] 0.9933071\n[12,] 0.9999546\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "\nerror: ",
        "inv(): matrix seems singular",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = matrix(1:9,  : \n  inv(): matrix seems singular\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "     [,1]\n[1,] 0.25\n[2,] 0.25\n[3,] 0.25\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "     [,1] [,2] [,3]\n[1,] 0.25 0.00 0.00\n[2,] 0.00 0.25 0.00\n[3,] 0.00 0.00 0.25\n\nRestarting R session...\n\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "Error in .External(list(name = \"CppMethod__invoke_notvoid\", address = <pointer: (nil)>,  : \n  NULL value passed as symbol address\n",
        "> ",
        "library(pack)",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "     [,1] [,2] [,3]\n[1,]    4    0    0\n[2,]    0    4    0\n[3,]    0    0    4\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "     [,1] [,2] [,3]\n[1,] 0.25 0.00 0.00\n[2,] 0.00 0.25 0.00\n[3,] 0.00 0.00 0.25\n\nRestarting R session...\n\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "library(pack)",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "      [,1]   [,2]  [,3]\n[1,]  -3.5  -8.00 -12.5\n[2,]  -8.0 -19.25 -30.5\n[3,] -12.5 -30.50 -48.5\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "     [,1] [,2] [,3]\n[1,] 0.25 0.00 0.00\n[2,] 0.00 0.25 0.00\n[3,] 0.00 0.00 0.25\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Error in .getClassesFromCache(Class) : object 'FisherScoring' not found\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Error in .getClassesFromCache(Class) : object 'FisherScoring' not found\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "               [,1]   [,2]  [,3]\n[1,]  4.650541e-310  -8.00 -12.5\n[2,]  -8.000000e+00 -19.25 -30.5\n[3,]  -1.250000e+01 -30.50 -48.5\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Error in .getClassesFromCache(Class) : object 'FisherScoring' not found\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x55e25bc794e0>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "      nan\n      nan\n      nan\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = matrix(1:9,  : \n  Error in function boost::math::cdf(const logistic_distribution<double>&, double): Random variate x is -nan, but must be finite!\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "> ",
        "                       Y_M = matrix(c(1,2,8)))",
        "Error: unexpected ')' in \"                       Y_M = matrix(c(1,2,8)))\"\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       Y_M = matrix(c(1,8,3)),",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "   1.8919\n   2.0353e+02\n",
        "\nerror: ",
        "inv(): matrix seems singular",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), Y_M = matrix(c(1,  : \n  inv(): matrix seems singular\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = matrix(c(1,8,3)),",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "   1.8919\n   2.0353e+02\n",
        "\nerror: ",
        "inv(): matrix seems singular",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = matrix(c(1,  : \n  inv(): matrix seems singular\n",
        "> ",
        "# # DATA",
        "> ",
        "{",
        "+ ",
        "  # Libraries",
        "+ ",
        "  library(dobson)",
        "+ ",
        "  ",
        "+ ",
        "  # Data",
        "+ ",
        "  beetle",
        "+ ",
        "  i=1",
        "+ ",
        "  beetle_ext <- data.frame(x = as.matrix(rep(beetle[i,1],beetle[i,2])), y= c(rep(1,beetle[i,3]), rep(0,beetle[i,2]-beetle[i,3]) ))",
        "+ ",
        "  ",
        "+ ",
        "  for (i in 2:nrow(beetle)) {",
        "+ ",
        "    beetle_ext <- rbind(beetle_ext,data.frame(x = as.matrix(rep(beetle[i,1],beetle[i,2])), y= c(rep(1,beetle[i,3]), rep(0,beetle[i,2]-beetle[i,3]))))",
        "+ ",
        "  }",
        "+ ",
        "  beetle_ext <- as.data.frame(beetle_ext)",
        "+ ",
        "  names(beetle_ext) <- c(\"x\", \"y\")",
        "+ ",
        "  head(beetle_ext)",
        "+ ",
        "  ",
        "+ ",
        "  # Matrix and vectors",
        "+ ",
        "  X = as.matrix(data.frame(x0 = as.vector(rep(1,nrow(beetle_ext))), x1 = as.vector(unlist(as.vector(beetle_ext$x)))))",
        "+ ",
        "  Y = beetle_ext$y",
        "+ ",
        "  Y = matrix(Y)",
        "+ ",
        "  beta = as.matrix(rep(0,2))",
        "+ ",
        "  mu = as.matrix(X)%*%beta",
        "+ ",
        "}",
        "> ",
        "X",
        "       x0     x1\n  [1,]  1 1.6907\n  [2,]  1 1.6907\n  [3,]  1 1.6907\n  [4,]  1 1.6907\n  [5,]  1 1.6907\n  [6,]  1 1.6907\n  [7,]  1 1.6907\n  [8,]  1 1.6907\n  [9,]  1 1.6907\n [10,]  1 1.6907\n [11,]  1 1.6907\n [12,]  1 1.6907\n [13,]  1 1.6907\n [14,]  1 1.6907\n [15,]  1 1.6907\n [16,]  1 1.6907\n [17,]  1 1.6907\n [18,]  1 1.6907\n [19,]  1 1.6907\n [20,]  1 1.6907\n [21,]  1 1.6907\n [22,]  1 1.6907\n [23,]  1 1.6907\n [24,]  1 1.6907\n [25,]  1 1.6907\n [26,]  1 1.6907\n [27,]  1 1.6907\n [28,]  1 1.6907\n [29,]  1 1.6907\n [30,]",
        "  1 1.6907\n [31,]  1 1.6907\n [32,]  1 1.6907\n [33,]  1 1.6907\n [34,]  1 1.6907\n [35,]  1 1.6907\n [36,]  1 1.6907\n [37,]  1 1.6907\n [38,]  1 1.6907\n [39,]  1 1.6907\n [40,]  1 1.6907\n [41,]  1 1.6907\n [42,]  1 1.6907\n [43,]  1 1.6907\n [44,]  1 1.6907\n [45,]  1 1.6907\n [46,]  1 1.6907\n [47,]  1 1.6907\n [48,]  1 1.6907\n [49,]  1 1.6907\n [50,]  1 1.6907\n [51,]  1 1.6907\n [52,]  1 1.6907\n [53,]  1 1.6907\n [54,]  1 1.6907\n [55,]  1 1.6907\n [56,]  1 1.6907\n [57,]  1 1.6907\n [58,]  1 1.6907\n [59,]  1 1.6907\n [60,]  1",
        " 1.7242\n [61,]  1 1.7242\n [62,]  1 1.7242\n [63,]  1 1.7242\n [64,]  1 1.7242\n [65,]  1 1.7242\n [66,]  1 1.7242\n [67,]  1 1.7242\n [68,]  1 1.7242\n [69,]  1 1.7242\n [70,]  1 1.7242\n [71,]  1 1.7242\n [72,]  1 1.7242\n [73,]  1 1.7242\n [74,]  1 1.7242\n [75,]  1 1.7242\n [76,]  1 1.7242\n [77,]  1 1.7242\n [78,]  1 1.7242\n [79,]  1 1.7242\n [80,]  1 1.7242\n [81,]  1 1.7242\n [82,]  1 1.7242\n [83,]  1 1.7242\n [84,]  1 1.7242\n [85,]  1 1.7242\n [86,]  1 1.7242\n [87,]  1 1.7242\n [88,]  1 1.7242\n [89,]  1 1.7242\n [90,]  1 1.7242",
        "\n [91,]  1 1.7242\n [92,]  1 1.7242\n [93,]  1 1.7242\n [94,]  1 1.7242\n [95,]  1 1.7242\n [96,]  1 1.7242\n [97,]  1 1.7242\n [98,]  1 1.7242\n [99,]  1 1.7242\n[100,]  1 1.7242\n[101,]  1 1.7242\n[102,]  1 1.7242\n[103,]  1 1.7242\n[104,]  1 1.7242\n[105,]  1 1.7242\n[106,]  1 1.7242\n[107,]  1 1.7242\n[108,]  1 1.7242\n[109,]  1 1.7242\n[110,]  1 1.7242\n[111,]  1 1.7242\n[112,]  1 1.7242\n[113,]  1 1.7242\n[114,]  1 1.7242\n[115,]  1 1.7242\n[116,]  1 1.7242\n[117,]  1 1.7242\n[118,]  1 1.7242\n[119,]  1 1.7242\n[120,]  1 1.7552\n[121,]",
        "  1 1.7552\n[122,]  1 1.7552\n[123,]  1 1.7552\n[124,]  1 1.7552\n[125,]  1 1.7552\n[126,]  1 1.7552\n[127,]  1 1.7552\n[128,]  1 1.7552\n[129,]  1 1.7552\n[130,]  1 1.7552\n[131,]  1 1.7552\n[132,]  1 1.7552\n[133,]  1 1.7552\n[134,]  1 1.7552\n[135,]  1 1.7552\n[136,]  1 1.7552\n[137,]  1 1.7552\n[138,]  1 1.7552\n[139,]  1 1.7552\n[140,]  1 1.7552\n[141,]  1 1.7552\n[142,]  1 1.7552\n[143,]  1 1.7552\n[144,]  1 1.7552\n[145,]  1 1.7552\n[146,]  1 1.7552\n[147,]  1 1.7552\n[148,]  1 1.7552\n[149,]  1 1.7552\n[150,]  1 1.7552\n[151,]  1",
        " 1.7552\n[152,]  1 1.7552\n[153,]  1 1.7552\n[154,]  1 1.7552\n[155,]  1 1.7552\n[156,]  1 1.7552\n[157,]  1 1.7552\n[158,]  1 1.7552\n[159,]  1 1.7552\n[160,]  1 1.7552\n[161,]  1 1.7552\n[162,]  1 1.7552\n[163,]  1 1.7552\n[164,]  1 1.7552\n[165,]  1 1.7552\n[166,]  1 1.7552\n[167,]  1 1.7552\n[168,]  1 1.7552\n[169,]  1 1.7552\n[170,]  1 1.7552\n[171,]  1 1.7552\n[172,]  1 1.7552\n[173,]  1 1.7552\n[174,]  1 1.7552\n[175,]  1 1.7552\n[176,]  1 1.7552\n[177,]  1 1.7552\n[178,]  1 1.7552\n[179,]  1 1.7552\n[180,]  1 1.7552\n[181,]  1 1.7552",
        "\n[182,]  1 1.7842\n[183,]  1 1.7842\n[184,]  1 1.7842\n[185,]  1 1.7842\n[186,]  1 1.7842\n[187,]  1 1.7842\n[188,]  1 1.7842\n[189,]  1 1.7842\n[190,]  1 1.7842\n[191,]  1 1.7842\n[192,]  1 1.7842\n[193,]  1 1.7842\n[194,]  1 1.7842\n[195,]  1 1.7842\n[196,]  1 1.7842\n[197,]  1 1.7842\n[198,]  1 1.7842\n[199,]  1 1.7842\n[200,]  1 1.7842\n[201,]  1 1.7842\n[202,]  1 1.7842\n[203,]  1 1.7842\n[204,]  1 1.7842\n[205,]  1 1.7842\n[206,]  1 1.7842\n[207,]  1 1.7842\n[208,]  1 1.7842\n[209,]  1 1.7842\n[210,]  1 1.7842\n[211,]  1 1.7842\n[212,]",
        "  1 1.7842\n[213,]  1 1.7842\n[214,]  1 1.7842\n[215,]  1 1.7842\n[216,]  1 1.7842\n[217,]  1 1.7842\n[218,]  1 1.7842\n[219,]  1 1.7842\n[220,]  1 1.7842\n[221,]  1 1.7842\n[222,]  1 1.7842\n[223,]  1 1.7842\n[224,]  1 1.7842\n[225,]  1 1.7842\n[226,]  1 1.7842\n[227,]  1 1.7842\n[228,]  1 1.7842\n[229,]  1 1.7842\n[230,]  1 1.7842\n[231,]  1 1.7842\n[232,]  1 1.7842\n[233,]  1 1.7842\n[234,]  1 1.7842\n[235,]  1 1.7842\n[236,]  1 1.7842\n[237,]  1 1.7842\n[238,]  1 1.8113\n[239,]  1 1.8113\n[240,]  1 1.8113\n[241,]  1 1.8113\n[242,]  1",
        " 1.8113\n[243,]  1 1.8113\n[244,]  1 1.8113\n[245,]  1 1.8113\n[246,]  1 1.8113\n[247,]  1 1.8113\n[248,]  1 1.8113\n[249,]  1 1.8113\n[250,]  1 1.8113\n[251,]  1 1.8113\n[252,]  1 1.8113\n[253,]  1 1.8113\n[254,]  1 1.8113\n[255,]  1 1.8113\n[256,]  1 1.8113\n[257,]  1 1.8113\n[258,]  1 1.8113\n[259,]  1 1.8113\n[260,]  1 1.8113\n[261,]  1 1.8113\n[262,]  1 1.8113\n[263,]  1 1.8113\n[264,]  1 1.8113\n[265,]  1 1.8113\n[266,]  1 1.8113\n[267,]  1 1.8113\n[268,]  1 1.8113\n[269,]  1 1.8113\n[270,]  1 1.8113\n[271,]  1 1.8113\n[272,]  1 1.8113",
        "\n[273,]  1 1.8113\n[274,]  1 1.8113\n[275,]  1 1.8113\n[276,]  1 1.8113\n[277,]  1 1.8113\n[278,]  1 1.8113\n[279,]  1 1.8113\n[280,]  1 1.8113\n[281,]  1 1.8113\n[282,]  1 1.8113\n[283,]  1 1.8113\n[284,]  1 1.8113\n[285,]  1 1.8113\n[286,]  1 1.8113\n[287,]  1 1.8113\n[288,]  1 1.8113\n[289,]  1 1.8113\n[290,]  1 1.8113\n[291,]  1 1.8113\n[292,]  1 1.8113\n[293,]  1 1.8113\n[294,]  1 1.8113\n[295,]  1 1.8113\n[296,]  1 1.8113\n[297,]  1 1.8113\n[298,]  1 1.8113\n[299,]  1 1.8113\n[300,]  1 1.8113\n[301,]  1 1.8369\n[302,]  1 1.8369\n[303,]",
        "  1 1.8369\n[304,]  1 1.8369\n[305,]  1 1.8369\n[306,]  1 1.8369\n[307,]  1 1.8369\n[308,]  1 1.8369\n[309,]  1 1.8369\n[310,]  1 1.8369\n[311,]  1 1.8369\n[312,]  1 1.8369\n[313,]  1 1.8369\n[314,]  1 1.8369\n[315,]  1 1.8369\n[316,]  1 1.8369\n[317,]  1 1.8369\n[318,]  1 1.8369\n[319,]  1 1.8369\n[320,]  1 1.8369\n[321,]  1 1.8369\n[322,]  1 1.8369\n[323,]  1 1.8369\n[324,]  1 1.8369\n[325,]  1 1.8369\n[326,]  1 1.8369\n[327,]  1 1.8369\n[328,]  1 1.8369\n[329,]  1 1.8369\n[330,]  1 1.8369\n[331,]  1 1.8369\n[332,]  1 1.8369\n[333,]  1",
        " 1.8369\n[334,]  1 1.8369\n[335,]  1 1.8369\n[336,]  1 1.8369\n[337,]  1 1.8369\n[338,]  1 1.8369\n[339,]  1 1.8369\n[340,]  1 1.8369\n[341,]  1 1.8369\n[342,]  1 1.8369\n[343,]  1 1.8369\n[344,]  1 1.8369\n[345,]  1 1.8369\n[346,]  1 1.8369\n[347,]  1 1.8369\n[348,]  1 1.8369\n[349,]  1 1.8369\n[350,]  1 1.8369\n[351,]  1 1.8369\n[352,]  1 1.8369\n[353,]  1 1.8369\n[354,]  1 1.8369\n[355,]  1 1.8369\n[356,]  1 1.8369\n[357,]  1 1.8369\n[358,]  1 1.8369\n[359,]  1 1.8369\n[360,]  1 1.8610\n[361,]  1 1.8610\n[362,]  1 1.8610\n[363,]  1 1.8610",
        "\n[364,]  1 1.8610\n[365,]  1 1.8610\n[366,]  1 1.8610\n[367,]  1 1.8610\n[368,]  1 1.8610\n[369,]  1 1.8610\n[370,]  1 1.8610\n[371,]  1 1.8610\n[372,]  1 1.8610\n[373,]  1 1.8610\n[374,]  1 1.8610\n[375,]  1 1.8610\n[376,]  1 1.8610\n[377,]  1 1.8610\n[378,]  1 1.8610\n[379,]  1 1.8610\n[380,]  1 1.8610\n[381,]  1 1.8610\n[382,]  1 1.8610\n[383,]  1 1.8610\n[384,]  1 1.8610\n[385,]  1 1.8610\n[386,]  1 1.8610\n[387,]  1 1.8610\n[388,]  1 1.8610\n[389,]  1 1.8610\n[390,]  1 1.8610\n[391,]  1 1.8610\n[392,]  1 1.8610\n[393,]  1 1.8610\n[394,]",
        "  1 1.8610\n[395,]  1 1.8610\n[396,]  1 1.8610\n[397,]  1 1.8610\n[398,]  1 1.8610\n[399,]  1 1.8610\n[400,]  1 1.8610\n[401,]  1 1.8610\n[402,]  1 1.8610\n[403,]  1 1.8610\n[404,]  1 1.8610\n[405,]  1 1.8610\n[406,]  1 1.8610\n[407,]  1 1.8610\n[408,]  1 1.8610\n[409,]  1 1.8610\n[410,]  1 1.8610\n[411,]  1 1.8610\n[412,]  1 1.8610\n[413,]  1 1.8610\n[414,]  1 1.8610\n[415,]  1 1.8610\n[416,]  1 1.8610\n[417,]  1 1.8610\n[418,]  1 1.8610\n[419,]  1 1.8610\n[420,]  1 1.8610\n[421,]  1 1.8610\n[422,]  1 1.8839\n[423,]  1 1.8839\n[424,]  1",
        " 1.8839\n[425,]  1 1.8839\n[426,]  1 1.8839\n[427,]  1 1.8839\n[428,]  1 1.8839\n[429,]  1 1.8839\n[430,]  1 1.8839\n[431,]  1 1.8839\n[432,]  1 1.8839\n[433,]  1 1.8839\n[434,]  1 1.8839\n[435,]  1 1.8839\n[436,]  1 1.8839\n[437,]  1 1.8839\n[438,]  1 1.8839\n[439,]  1 1.8839\n[440,]  1 1.8839\n[441,]  1 1.8839\n[442,]  1 1.8839\n[443,]  1 1.8839\n[444,]  1 1.8839\n[445,]  1 1.8839\n[446,]  1 1.8839\n[447,]  1 1.8839\n[448,]  1 1.8839\n[449,]  1 1.8839\n[450,]  1 1.8839\n[451,]  1 1.8839\n[452,]  1 1.8839\n[453,]  1 1.8839\n[454,]  1 1.8839",
        "\n[455,]  1 1.8839\n[456,]  1 1.8839\n[457,]  1 1.8839\n[458,]  1 1.8839\n[459,]  1 1.8839\n[460,]  1 1.8839\n[461,]  1 1.8839\n[462,]  1 1.8839\n[463,]  1 1.8839\n[464,]  1 1.8839\n[465,]  1 1.8839\n[466,]  1 1.8839\n[467,]  1 1.8839\n[468,]  1 1.8839\n[469,]  1 1.8839\n[470,]  1 1.8839\n[471,]  1 1.8839\n[472,]  1 1.8839\n[473,]  1 1.8839\n[474,]  1 1.8839\n[475,]  1 1.8839\n[476,]  1 1.8839\n[477,]  1 1.8839\n[478,]  1 1.8839\n[479,]  1 1.8839\n[480,]  1 1.8839\n[481,]  1 1.8839\n",
        "> ",
        "Y",
        "       [,1]\n  [1,]    1\n  [2,]    1\n  [3,]    1\n  [4,]    1\n  [5,]    1\n  [6,]    1\n  [7,]    0\n  [8,]    0\n  [9,]    0\n [10,]    0\n [11,]    0\n [12,]    0\n [13,]    0\n [14,]    0\n [15,]    0\n [16,]    0\n [17,]    0\n [18,]    0\n [19,]    0\n [20,]    0\n [21,]    0\n [22,]    0\n [23,]    0\n [24,]    0\n [25,]    0\n [26,]    0\n [27,]    0\n [28,]    0\n [29,]    0\n [30,]    0\n [31,]    0\n [32,]    0\n [33,]    0\n [34,]    0\n [35,]    0\n [36,]    0\n [37,]    0\n [38,]    0\n [39,]    0\n [40,]    0\n [41,]    0\n [42,]    0",
        "\n [43,]    0\n [44,]    0\n [45,]    0\n [46,]    0\n [47,]    0\n [48,]    0\n [49,]    0\n [50,]    0\n [51,]    0\n [52,]    0\n [53,]    0\n [54,]    0\n [55,]    0\n [56,]    0\n [57,]    0\n [58,]    0\n [59,]    0\n [60,]    1\n [61,]    1\n [62,]    1\n [63,]    1\n [64,]    1\n [65,]    1\n [66,]    1\n [67,]    1\n [68,]    1\n [69,]    1\n [70,]    1\n [71,]    1\n [72,]    1\n [73,]    0\n [74,]    0\n [75,]    0\n [76,]    0\n [77,]    0\n [78,]    0\n [79,]    0\n [80,]    0\n [81,]    0\n [82,]    0\n [83,]    0\n [84,]    0\n [85,]    0",
        "\n [86,]    0\n [87,]    0\n [88,]    0\n [89,]    0\n [90,]    0\n [91,]    0\n [92,]    0\n [93,]    0\n [94,]    0\n [95,]    0\n [96,]    0\n [97,]    0\n [98,]    0\n [99,]    0\n[100,]    0\n[101,]    0\n[102,]    0\n[103,]    0\n[104,]    0\n[105,]    0\n[106,]    0\n[107,]    0\n[108,]    0\n[109,]    0\n[110,]    0\n[111,]    0\n[112,]    0\n[113,]    0\n[114,]    0\n[115,]    0\n[116,]    0\n[117,]    0\n[118,]    0\n[119,]    0\n[120,]    1\n[121,]    1\n[122,]    1\n[123,]    1\n[124,]    1\n[125,]    1\n[126,]    1\n[127,]    1\n[128,]    1",
        "\n[129,]    1\n[130,]    1\n[131,]    1\n[132,]    1\n[133,]    1\n[134,]    1\n[135,]    1\n[136,]    1\n[137,]    1\n[138,]    0\n[139,]    0\n[140,]    0\n[141,]    0\n[142,]    0\n[143,]    0\n[144,]    0\n[145,]    0\n[146,]    0\n[147,]    0\n[148,]    0\n[149,]    0\n[150,]    0\n[151,]    0\n[152,]    0\n[153,]    0\n[154,]    0\n[155,]    0\n[156,]    0\n[157,]    0\n[158,]    0\n[159,]    0\n[160,]    0\n[161,]    0\n[162,]    0\n[163,]    0\n[164,]    0\n[165,]    0\n[166,]    0\n[167,]    0\n[168,]    0\n[169,]    0\n[170,]    0\n[171,]    0",
        "\n[172,]    0\n[173,]    0\n[174,]    0\n[175,]    0\n[176,]    0\n[177,]    0\n[178,]    0\n[179,]    0\n[180,]    0\n[181,]    0\n[182,]    1\n[183,]    1\n[184,]    1\n[185,]    1\n[186,]    1\n[187,]    1\n[188,]    1\n[189,]    1\n[190,]    1\n[191,]    1\n[192,]    1\n[193,]    1\n[194,]    1\n[195,]    1\n[196,]    1\n[197,]    1\n[198,]    1\n[199,]    1\n[200,]    1\n[201,]    1\n[202,]    1\n[203,]    1\n[204,]    1\n[205,]    1\n[206,]    1\n[207,]    1\n[208,]    1\n[209,]    1\n[210,]    0\n[211,]    0\n[212,]    0\n[213,]    0\n[214,]    0",
        "\n[215,]    0\n[216,]    0\n[217,]    0\n[218,]    0\n[219,]    0\n[220,]    0\n[221,]    0\n[222,]    0\n[223,]    0\n[224,]    0\n[225,]    0\n[226,]    0\n[227,]    0\n[228,]    0\n[229,]    0\n[230,]    0\n[231,]    0\n[232,]    0\n[233,]    0\n[234,]    0\n[235,]    0\n[236,]    0\n[237,]    0\n[238,]    1\n[239,]    1\n[240,]    1\n[241,]    1\n[242,]    1\n[243,]    1\n[244,]    1\n[245,]    1\n[246,]    1\n[247,]    1\n[248,]    1\n[249,]    1\n[250,]    1\n[251,]    1\n[252,]    1\n[253,]    1\n[254,]    1\n[255,]    1\n[256,]    1\n[257,]    1",
        "\n[258,]    1\n[259,]    1\n[260,]    1\n[261,]    1\n[262,]    1\n[263,]    1\n[264,]    1\n[265,]    1\n[266,]    1\n[267,]    1\n[268,]    1\n[269,]    1\n[270,]    1\n[271,]    1\n[272,]    1\n[273,]    1\n[274,]    1\n[275,]    1\n[276,]    1\n[277,]    1\n[278,]    1\n[279,]    1\n[280,]    1\n[281,]    1\n[282,]    1\n[283,]    1\n[284,]    1\n[285,]    1\n[286,]    1\n[287,]    1\n[288,]    1\n[289,]    1\n[290,]    0\n[291,]    0\n[292,]    0\n[293,]    0\n[294,]    0\n[295,]    0\n[296,]    0\n[297,]    0\n[298,]    0\n[299,]    0\n[300,]    0",
        "\n[301,]    1\n[302,]    1\n[303,]    1\n[304,]    1\n[305,]    1\n[306,]    1\n[307,]    1\n[308,]    1\n[309,]    1\n[310,]    1\n[311,]    1\n[312,]    1\n[313,]    1\n[314,]    1\n[315,]    1\n[316,]    1\n[317,]    1\n[318,]    1\n[319,]    1\n[320,]    1\n[321,]    1\n[322,]    1\n[323,]    1\n[324,]    1\n[325,]    1\n[326,]    1\n[327,]    1\n[328,]    1\n[329,]    1\n[330,]    1\n[331,]    1\n[332,]    1\n[333,]    1\n[334,]    1\n[335,]    1\n[336,]    1\n[337,]    1\n[338,]    1\n[339,]    1\n[340,]    1\n[341,]    1\n[342,]    1\n[343,]    1",
        "\n[344,]    1\n[345,]    1\n[346,]    1\n[347,]    1\n[348,]    1\n[349,]    1\n[350,]    1\n[351,]    1\n[352,]    1\n[353,]    1\n[354,]    0\n[355,]    0\n[356,]    0\n[357,]    0\n[358,]    0\n[359,]    0\n[360,]    1\n[361,]    1\n[362,]    1\n[363,]    1\n[364,]    1\n[365,]    1\n[366,]    1\n[367,]    1\n[368,]    1\n[369,]    1\n[370,]    1\n[371,]    1\n[372,]    1\n[373,]    1\n[374,]    1\n[375,]    1\n[376,]    1\n[377,]    1\n[378,]    1\n[379,]    1\n[380,]    1\n[381,]    1\n[382,]    1\n[383,]    1\n[384,]    1\n[385,]    1\n[386,]    1",
        "\n[387,]    1\n[388,]    1\n[389,]    1\n[390,]    1\n[391,]    1\n[392,]    1\n[393,]    1\n[394,]    1\n[395,]    1\n[396,]    1\n[397,]    1\n[398,]    1\n[399,]    1\n[400,]    1\n[401,]    1\n[402,]    1\n[403,]    1\n[404,]    1\n[405,]    1\n[406,]    1\n[407,]    1\n[408,]    1\n[409,]    1\n[410,]    1\n[411,]    1\n[412,]    1\n[413,]    1\n[414,]    1\n[415,]    1\n[416,]    1\n[417,]    1\n[418,]    1\n[419,]    1\n[420,]    1\n[421,]    0\n[422,]    1\n[423,]    1\n[424,]    1\n[425,]    1\n[426,]    1\n[427,]    1\n[428,]    1\n[429,]    1",
        "\n[430,]    1\n[431,]    1\n[432,]    1\n[433,]    1\n[434,]    1\n[435,]    1\n[436,]    1\n[437,]    1\n[438,]    1\n[439,]    1\n[440,]    1\n[441,]    1\n[442,]    1\n[443,]    1\n[444,]    1\n[445,]    1\n[446,]    1\n[447,]    1\n[448,]    1\n[449,]    1\n[450,]    1\n[451,]    1\n[452,]    1\n[453,]    1\n[454,]    1\n[455,]    1\n[456,]    1\n[457,]    1\n[458,]    1\n[459,]    1\n[460,]    1\n[461,]    1\n[462,]    1\n[463,]    1\n[464,]    1\n[465,]    1\n[466,]    1\n[467,]    1\n[468,]    1\n[469,]    1\n[470,]    1\n[471,]    1\n[472,]    1",
        "\n[473,]    1\n[474,]    1\n[475,]    1\n[476,]    1\n[477,]    1\n[478,]    1\n[479,]    1\n[480,]    1\n[481,]    1\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "  -37.8564\n   21.3374\n  -53.8532\n   30.3835\n  -59.9652\n   33.8442\n  -60.7078\n   34.2648\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175",
        "\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n  -60.7175\n   34.2703\n          [,1]\n[1,] -60.71745\n[2,]  34.27033\n\nRestarting R session...\n\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "library(pack)",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "Error in .External(list(name = \"CppMethod__invoke_notvoid\", address = <pointer: (nil)>,  : \n  NULL value passed as symbol address\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "  -14.8662\n    8.3792\n  -22.5310\n   12.7036\n  -27.4142\n   15.4621\n  -30.5464\n   17.2330\n  -32.4661\n   18.3190\n  -33.5780\n   18.9481\n  -34.1921\n   19.2956\n  -34.5204\n   19.4814\n  -34.6925\n   19.5788\n  -34.7818\n   19.6293\n  -34.8278\n   19.6553\n  -34.8514\n   19.6687\n  -34.8636\n   19.6756\n  -34.8698\n   19.6791\n  -34.8730\n   19.6809\n  -34.8746\n   19.6818\n  -34.8754\n   19.6823\n  -34.8759\n   19.6825\n  -34.8761\n   19.6827\n  -34.8762\n   19.6827\n  -34.8762\n   19.6827\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763",
        "\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n          [,1]\n[1,] -34.87630\n[2,]  19.68278\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "library(devtools)",
        "Loading required package: usethis\n",
        "> ",
        "library(tidyverse)",
        "[37m── [1mAttaching packages[22m ─────────────── tidyverse 1.2.1 ──[39m\n",
        "[37m[32m✔[37m [34mggplot2[37m 3.2.1     [32m✔[37m [34mpurrr  [37m 0.3.2\n[32m✔[37m [34mtibble [37m 2.1.3     [32m✔[37m [34mdplyr  [37m 0.8.3\n[32m✔[37m [34mtidyr  [37m 0.8.3     [32m✔[37m [34mstringr[37m 1.4.0\n[32m✔[37m [34mreadr  [37m 1.3.1     [32m✔[37m [34mforcats[37m 0.4.0[39m\n",
        "[37m── [1mConflicts[22m ────────────────── tidyverse_conflicts() ──\n[31m✖[37m [34mdplyr[37m::[32mfilter()[37m masks [34mstats[37m::filter()\n[31m✖[37m [34mdplyr[37m::[32mlag()[37m    masks [34mstats[37m::lag()[39m\n",
        "> ",
        "library(fs)",
        "> ",
        "library(Rcpp)",
        "> ",
        "library(RcppArmadillo)",
        "> ",
        "library(RcppEigen)",
        "\nAttaching package: ‘RcppEigen’\n\n",
        "The following objects are masked from ‘package:RcppArmadillo’:\n\n    fastLm, fastLmPure\n\n",
        "> ",
        "getLoadedDLLs()",
        "                                                                                             Filename\nbase                                                                                             base\nmethods                                                    /usr/lib/R/library/methods/libs/methods.so\nutils                                                          /usr/lib/R/library/utils/libs/utils.so\ngrDevices                                              /usr/lib/R/library/grDevices/libs/grDevices.so\ngraphics     ",
        "                                            /usr/lib/R/library/graphics/libs/graphics.so\nstats                                                          /usr/lib/R/library/stats/libs/stats.so\ngrid                                                             /usr/lib/R/library/grid/libs/grid.so\nlattice                                                    /usr/lib/R/library/lattice/libs/lattice.so\nMatrix                                                       /usr/lib/R/library/Matrix/libs/Matrix.so\ntools                                                          /usr/lib/R/library/tools/libs/tools.so",
        "\ninternet                                                              /usr/lib/R/modules//internet.so\n(embedding)                                                                               (embedding)\nRcpp                            /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs/Rcpp.so\npack                            /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/pack/libs/pack.so\nrlang                         /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/rlang/libs/rlang.so\npkgload      ",
        "             /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/pkgload/libs/pkgload.so\nbackports             /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/backports/libs/backports.so\ntestthat                /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/testthat/libs/testthat.so\nfs                                  /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/fs/libs/fs.so\nglue                            /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/glue/libs/glue.so\ndigest                      /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/digest/libs/digest.so",
        "\nprocessx                /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/processx/libs/processx.so\nps                                  /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/ps/libs/ps.so\ntibble                      /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/tibble/libs/tibble.so\npurrr                         /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/purrr/libs/purrr.so\ntidyselect          /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/tidyselect/libs/tidyselect.so\ndplyr        ",
        "                 /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/dplyr/libs/dplyr.so\nnlme                                                             /usr/lib/R/library/nlme/libs/nlme.so\ntidyr                         /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/tidyr/libs/tidyr.so\ncolorspace          /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/colorspace/libs/colorspace.so\nscales                      /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/scales/libs/scales.so\nlazyeval                /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/lazyeval/libs/lazyeval.so",
        "\nvctrs                         /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/vctrs/libs/vctrs.so\nhaven                         /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/haven/libs/haven.so\njsonlite                /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/jsonlite/libs/jsonlite.so\nstringi                   /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/stringi/libs/stringi.so\nlubridate             /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/lubridate/libs/lubridate.so\nreadr        ",
        "                 /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/readr/libs/readr.so\nreadxl                      /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/readxl/libs/readxl.so\nxml2                            /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/xml2/libs/xml2.so\nRcppArmadillo /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs/RcppArmadillo.so\nRcppEigen             /home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/RcppEigen/libs/RcppEigen.so\n              Dynamic.Lookup",
        "\nbase                   FALSE\nmethods                FALSE\nutils                  FALSE\ngrDevices              FALSE\ngraphics               FALSE\nstats                  FALSE\ngrid                   FALSE\nlattice                FALSE\nMatrix                 FALSE\ntools                  FALSE\ninternet                TRUE\n(embedding)            FALSE\nRcpp                    TRUE\npack                   FALSE\nrlang                  FALSE\npkgload                FALSE\nbackports              FALSE\ntestthat               FALSE",
        "\nfs                     FALSE\nglue                   FALSE\ndigest                  TRUE\nprocessx               FALSE\nps                     FALSE\ntibble                 FALSE\npurrr                  FALSE\ntidyselect             FALSE\ndplyr                  FALSE\nnlme                   FALSE\ntidyr                  FALSE\ncolorspace             FALSE\nscales                 FALSE\nlazyeval               FALSE\nvctrs                  FALSE\nhaven                  FALSE\njsonlite               FALSE\nstringi                FALSE",
        "\nlubridate              FALSE\nreadr                  FALSE\nreadxl                 FALSE\nxml2                   FALSE\nRcppArmadillo          FALSE\nRcppEigen              FALSE\n",
        "> ",
        "# Using modules",
        "> ",
        "# We need to tell R that we want to use a C++11 compiler ",
        "> ",
        "Sys.setenv(\"PKG_CXXFLAGS\"=\"-std=c++11\")",
        "> ",
        "pkgbuild::compile_dll()",
        "> ",
        "compileAttributes()",
        "Warning message:\n",
        "The following packages are referenced using Rcpp::depends attributes however are not listed in the Depends, Imports or LinkingTo fields of the package DESCRIPTION file: BH \n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "Error in .External(list(name = \"CppMethod__invoke_notvoid\", address = <pointer: (nil)>,  : \n  NULL value passed as symbol address\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = matrix(c(1,8,3)),",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "Error in .External(list(name = \"CppMethod__invoke_notvoid\", address = <pointer: (nil)>,  : \n  NULL value passed as symbol address\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "Error in .External(list(name = \"CppMethod__invoke_notvoid\", address = <pointer: (nil)>,  : \n  NULL value passed as symbol address\n",
        "\nRestarting R session...\n\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "library(pack)",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "Error in .External(list(name = \"CppMethod__invoke_notvoid\", address = <pointer: (nil)>,  : \n  NULL value passed as symbol address\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "Error in .External(list(name = \"CppMethod__invoke_notvoid\", address = <pointer: (nil)>,  : \n  NULL value passed as symbol address\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "Error in .External(list(name = \"CppMethod__invoke_notvoid\", address = <pointer: (nil)>,  : \n  NULL value passed as symbol address\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = X, Y_M = Y) : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x55b0073fb5f0>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = matrix(c(1,8,3)),",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = matrix(c(1,  : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = X, Y_M = Y) : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = matrix(c(1,8,3)),",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = matrix(c(1,  : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = X, Y_M = Y) : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "> ",
        "X",
        "       x0     x1\n  [1,]  1 1.6907\n  [2,]  1 1.6907\n  [3,]  1 1.6907\n  [4,]  1 1.6907\n  [5,]  1 1.6907\n  [6,]  1 1.6907\n  [7,]  1 1.6907\n  [8,]  1 1.6907\n  [9,]  1 1.6907\n [10,]  1 1.6907\n [11,]  1 1.6907\n [12,]  1 1.6907\n [13,]  1 1.6907\n [14,]  1 1.6907\n [15,]  1 1.6907\n [16,]  1 1.6907\n [17,]  1 1.6907\n [18,]  1 1.6907\n [19,]  1 1.6907\n [20,]  1 1.6907\n [21,]  1 1.6907\n [22,]  1 1.6907\n [23,]  1 1.6907\n [24,]  1 1.6907\n [25,]  1 1.6907\n [26,]  1 1.6907\n [27,]  1 1.6907\n [28,]  1 1.6907\n [29,]  1 1.6907\n [30,]",
        "  1 1.6907\n [31,]  1 1.6907\n [32,]  1 1.6907\n [33,]  1 1.6907\n [34,]  1 1.6907\n [35,]  1 1.6907\n [36,]  1 1.6907\n [37,]  1 1.6907\n [38,]  1 1.6907\n [39,]  1 1.6907\n [40,]  1 1.6907\n [41,]  1 1.6907\n [42,]  1 1.6907\n [43,]  1 1.6907\n [44,]  1 1.6907\n [45,]  1 1.6907\n [46,]  1 1.6907\n [47,]  1 1.6907\n [48,]  1 1.6907\n [49,]  1 1.6907\n [50,]  1 1.6907\n [51,]  1 1.6907\n [52,]  1 1.6907\n [53,]  1 1.6907\n [54,]  1 1.6907\n [55,]  1 1.6907\n [56,]  1 1.6907\n [57,]  1 1.6907\n [58,]  1 1.6907\n [59,]  1 1.6907\n [60,]  1",
        " 1.7242\n [61,]  1 1.7242\n [62,]  1 1.7242\n [63,]  1 1.7242\n [64,]  1 1.7242\n [65,]  1 1.7242\n [66,]  1 1.7242\n [67,]  1 1.7242\n [68,]  1 1.7242\n [69,]  1 1.7242\n [70,]  1 1.7242\n [71,]  1 1.7242\n [72,]  1 1.7242\n [73,]  1 1.7242\n [74,]  1 1.7242\n [75,]  1 1.7242\n [76,]  1 1.7242\n [77,]  1 1.7242\n [78,]  1 1.7242\n [79,]  1 1.7242\n [80,]  1 1.7242\n [81,]  1 1.7242\n [82,]  1 1.7242\n [83,]  1 1.7242\n [84,]  1 1.7242\n [85,]  1 1.7242\n [86,]  1 1.7242\n [87,]  1 1.7242\n [88,]  1 1.7242\n [89,]  1 1.7242\n [90,]  1 1.7242",
        "\n [91,]  1 1.7242\n [92,]  1 1.7242\n [93,]  1 1.7242\n [94,]  1 1.7242\n [95,]  1 1.7242\n [96,]  1 1.7242\n [97,]  1 1.7242\n [98,]  1 1.7242\n [99,]  1 1.7242\n[100,]  1 1.7242\n[101,]  1 1.7242\n[102,]  1 1.7242\n[103,]  1 1.7242\n[104,]  1 1.7242\n[105,]  1 1.7242\n[106,]  1 1.7242\n[107,]  1 1.7242\n[108,]  1 1.7242\n[109,]  1 1.7242\n[110,]  1 1.7242\n[111,]  1 1.7242\n[112,]  1 1.7242\n[113,]  1 1.7242\n[114,]  1 1.7242\n[115,]  1 1.7242\n[116,]  1 1.7242\n[117,]  1 1.7242\n[118,]  1 1.7242\n[119,]  1 1.7242\n[120,]  1 1.7552\n[121,]",
        "  1 1.7552\n[122,]  1 1.7552\n[123,]  1 1.7552\n[124,]  1 1.7552\n[125,]  1 1.7552\n[126,]  1 1.7552\n[127,]  1 1.7552\n[128,]  1 1.7552\n[129,]  1 1.7552\n[130,]  1 1.7552\n[131,]  1 1.7552\n[132,]  1 1.7552\n[133,]  1 1.7552\n[134,]  1 1.7552\n[135,]  1 1.7552\n[136,]  1 1.7552\n[137,]  1 1.7552\n[138,]  1 1.7552\n[139,]  1 1.7552\n[140,]  1 1.7552\n[141,]  1 1.7552\n[142,]  1 1.7552\n[143,]  1 1.7552\n[144,]  1 1.7552\n[145,]  1 1.7552\n[146,]  1 1.7552\n[147,]  1 1.7552\n[148,]  1 1.7552\n[149,]  1 1.7552\n[150,]  1 1.7552\n[151,]  1",
        " 1.7552\n[152,]  1 1.7552\n[153,]  1 1.7552\n[154,]  1 1.7552\n[155,]  1 1.7552\n[156,]  1 1.7552\n[157,]  1 1.7552\n[158,]  1 1.7552\n[159,]  1 1.7552\n[160,]  1 1.7552\n[161,]  1 1.7552\n[162,]  1 1.7552\n[163,]  1 1.7552\n[164,]  1 1.7552\n[165,]  1 1.7552\n[166,]  1 1.7552\n[167,]  1 1.7552\n[168,]  1 1.7552\n[169,]  1 1.7552\n[170,]  1 1.7552\n[171,]  1 1.7552\n[172,]  1 1.7552\n[173,]  1 1.7552\n[174,]  1 1.7552\n[175,]  1 1.7552\n[176,]  1 1.7552\n[177,]  1 1.7552\n[178,]  1 1.7552\n[179,]  1 1.7552\n[180,]  1 1.7552\n[181,]  1 1.7552",
        "\n[182,]  1 1.7842\n[183,]  1 1.7842\n[184,]  1 1.7842\n[185,]  1 1.7842\n[186,]  1 1.7842\n[187,]  1 1.7842\n[188,]  1 1.7842\n[189,]  1 1.7842\n[190,]  1 1.7842\n[191,]  1 1.7842\n[192,]  1 1.7842\n[193,]  1 1.7842\n[194,]  1 1.7842\n[195,]  1 1.7842\n[196,]  1 1.7842\n[197,]  1 1.7842\n[198,]  1 1.7842\n[199,]  1 1.7842\n[200,]  1 1.7842\n[201,]  1 1.7842\n[202,]  1 1.7842\n[203,]  1 1.7842\n[204,]  1 1.7842\n[205,]  1 1.7842\n[206,]  1 1.7842\n[207,]  1 1.7842\n[208,]  1 1.7842\n[209,]  1 1.7842\n[210,]  1 1.7842\n[211,]  1 1.7842\n[212,]",
        "  1 1.7842\n[213,]  1 1.7842\n[214,]  1 1.7842\n[215,]  1 1.7842\n[216,]  1 1.7842\n[217,]  1 1.7842\n[218,]  1 1.7842\n[219,]  1 1.7842\n[220,]  1 1.7842\n[221,]  1 1.7842\n[222,]  1 1.7842\n[223,]  1 1.7842\n[224,]  1 1.7842\n[225,]  1 1.7842\n[226,]  1 1.7842\n[227,]  1 1.7842\n[228,]  1 1.7842\n[229,]  1 1.7842\n[230,]  1 1.7842\n[231,]  1 1.7842\n[232,]  1 1.7842\n[233,]  1 1.7842\n[234,]  1 1.7842\n[235,]  1 1.7842\n[236,]  1 1.7842\n[237,]  1 1.7842\n[238,]  1 1.8113\n[239,]  1 1.8113\n[240,]  1 1.8113\n[241,]  1 1.8113\n[242,]  1",
        " 1.8113\n[243,]  1 1.8113\n[244,]  1 1.8113\n[245,]  1 1.8113\n[246,]  1 1.8113\n[247,]  1 1.8113\n[248,]  1 1.8113\n[249,]  1 1.8113\n[250,]  1 1.8113\n[251,]  1 1.8113\n[252,]  1 1.8113\n[253,]  1 1.8113\n[254,]  1 1.8113\n[255,]  1 1.8113\n[256,]  1 1.8113\n[257,]  1 1.8113\n[258,]  1 1.8113\n[259,]  1 1.8113\n[260,]  1 1.8113\n[261,]  1 1.8113\n[262,]  1 1.8113\n[263,]  1 1.8113\n[264,]  1 1.8113\n[265,]  1 1.8113\n[266,]  1 1.8113\n[267,]  1 1.8113\n[268,]  1 1.8113\n[269,]  1 1.8113\n[270,]  1 1.8113\n[271,]  1 1.8113\n[272,]  1 1.8113",
        "\n[273,]  1 1.8113\n[274,]  1 1.8113\n[275,]  1 1.8113\n[276,]  1 1.8113\n[277,]  1 1.8113\n[278,]  1 1.8113\n[279,]  1 1.8113\n[280,]  1 1.8113\n[281,]  1 1.8113\n[282,]  1 1.8113\n[283,]  1 1.8113\n[284,]  1 1.8113\n[285,]  1 1.8113\n[286,]  1 1.8113\n[287,]  1 1.8113\n[288,]  1 1.8113\n[289,]  1 1.8113\n[290,]  1 1.8113\n[291,]  1 1.8113\n[292,]  1 1.8113\n[293,]  1 1.8113\n[294,]  1 1.8113\n[295,]  1 1.8113\n[296,]  1 1.8113\n[297,]  1 1.8113\n[298,]  1 1.8113\n[299,]  1 1.8113\n[300,]  1 1.8113\n[301,]  1 1.8369\n[302,]  1 1.8369\n[303,]",
        "  1 1.8369\n[304,]  1 1.8369\n[305,]  1 1.8369\n[306,]  1 1.8369\n[307,]  1 1.8369\n[308,]  1 1.8369\n[309,]  1 1.8369\n[310,]  1 1.8369\n[311,]  1 1.8369\n[312,]  1 1.8369\n[313,]  1 1.8369\n[314,]  1 1.8369\n[315,]  1 1.8369\n[316,]  1 1.8369\n[317,]  1 1.8369\n[318,]  1 1.8369\n[319,]  1 1.8369\n[320,]  1 1.8369\n[321,]  1 1.8369\n[322,]  1 1.8369\n[323,]  1 1.8369\n[324,]  1 1.8369\n[325,]  1 1.8369\n[326,]  1 1.8369\n[327,]  1 1.8369\n[328,]  1 1.8369\n[329,]  1 1.8369\n[330,]  1 1.8369\n[331,]  1 1.8369\n[332,]  1 1.8369\n[333,]  1",
        " 1.8369\n[334,]  1 1.8369\n[335,]  1 1.8369\n[336,]  1 1.8369\n[337,]  1 1.8369\n[338,]  1 1.8369\n[339,]  1 1.8369\n[340,]  1 1.8369\n[341,]  1 1.8369\n[342,]  1 1.8369\n[343,]  1 1.8369\n[344,]  1 1.8369\n[345,]  1 1.8369\n[346,]  1 1.8369\n[347,]  1 1.8369\n[348,]  1 1.8369\n[349,]  1 1.8369\n[350,]  1 1.8369\n[351,]  1 1.8369\n[352,]  1 1.8369\n[353,]  1 1.8369\n[354,]  1 1.8369\n[355,]  1 1.8369\n[356,]  1 1.8369\n[357,]  1 1.8369\n[358,]  1 1.8369\n[359,]  1 1.8369\n[360,]  1 1.8610\n[361,]  1 1.8610\n[362,]  1 1.8610\n[363,]  1 1.8610",
        "\n[364,]  1 1.8610\n[365,]  1 1.8610\n[366,]  1 1.8610\n[367,]  1 1.8610\n[368,]  1 1.8610\n[369,]  1 1.8610\n[370,]  1 1.8610\n[371,]  1 1.8610\n[372,]  1 1.8610\n[373,]  1 1.8610\n[374,]  1 1.8610\n[375,]  1 1.8610\n[376,]  1 1.8610\n[377,]  1 1.8610\n[378,]  1 1.8610\n[379,]  1 1.8610\n[380,]  1 1.8610\n[381,]  1 1.8610\n[382,]  1 1.8610\n[383,]  1 1.8610\n[384,]  1 1.8610\n[385,]  1 1.8610\n[386,]  1 1.8610\n[387,]  1 1.8610\n[388,]  1 1.8610\n[389,]  1 1.8610\n[390,]  1 1.8610\n[391,]  1 1.8610\n[392,]  1 1.8610\n[393,]  1 1.8610\n[394,]",
        "  1 1.8610\n[395,]  1 1.8610\n[396,]  1 1.8610\n[397,]  1 1.8610\n[398,]  1 1.8610\n[399,]  1 1.8610\n[400,]  1 1.8610\n[401,]  1 1.8610\n[402,]  1 1.8610\n[403,]  1 1.8610\n[404,]  1 1.8610\n[405,]  1 1.8610\n[406,]  1 1.8610\n[407,]  1 1.8610\n[408,]  1 1.8610\n[409,]  1 1.8610\n[410,]  1 1.8610\n[411,]  1 1.8610\n[412,]  1 1.8610\n[413,]  1 1.8610\n[414,]  1 1.8610\n[415,]  1 1.8610\n[416,]  1 1.8610\n[417,]  1 1.8610\n[418,]  1 1.8610\n[419,]  1 1.8610\n[420,]  1 1.8610\n[421,]  1 1.8610\n[422,]  1 1.8839\n[423,]  1 1.8839\n[424,]  1",
        " 1.8839\n[425,]  1 1.8839\n[426,]  1 1.8839\n[427,]  1 1.8839\n[428,]  1 1.8839\n[429,]  1 1.8839\n[430,]  1 1.8839\n[431,]  1 1.8839\n[432,]  1 1.8839\n[433,]  1 1.8839\n[434,]  1 1.8839\n[435,]  1 1.8839\n[436,]  1 1.8839\n[437,]  1 1.8839\n[438,]  1 1.8839\n[439,]  1 1.8839\n[440,]  1 1.8839\n[441,]  1 1.8839\n[442,]  1 1.8839\n[443,]  1 1.8839\n[444,]  1 1.8839\n[445,]  1 1.8839\n[446,]  1 1.8839\n[447,]  1 1.8839\n[448,]  1 1.8839\n[449,]  1 1.8839\n[450,]  1 1.8839\n[451,]  1 1.8839\n[452,]  1 1.8839\n[453,]  1 1.8839\n[454,]  1 1.8839",
        "\n[455,]  1 1.8839\n[456,]  1 1.8839\n[457,]  1 1.8839\n[458,]  1 1.8839\n[459,]  1 1.8839\n[460,]  1 1.8839\n[461,]  1 1.8839\n[462,]  1 1.8839\n[463,]  1 1.8839\n[464,]  1 1.8839\n[465,]  1 1.8839\n[466,]  1 1.8839\n[467,]  1 1.8839\n[468,]  1 1.8839\n[469,]  1 1.8839\n[470,]  1 1.8839\n[471,]  1 1.8839\n[472,]  1 1.8839\n[473,]  1 1.8839\n[474,]  1 1.8839\n[475,]  1 1.8839\n[476,]  1 1.8839\n[477,]  1 1.8839\n[478,]  1 1.8839\n[479,]  1 1.8839\n[480,]  1 1.8839\n[481,]  1 1.8839\n",
        "> ",
        "Y",
        "       [,1]\n  [1,]    1\n  [2,]    1\n  [3,]    1\n  [4,]    1\n  [5,]    1\n  [6,]    1\n  [7,]    0\n  [8,]    0\n  [9,]    0\n [10,]    0\n [11,]    0\n [12,]    0\n [13,]    0\n [14,]    0\n [15,]    0\n [16,]    0\n [17,]    0\n [18,]    0\n [19,]    0\n [20,]    0\n [21,]    0\n [22,]    0\n [23,]    0\n [24,]    0\n [25,]    0\n [26,]    0\n [27,]    0\n [28,]    0\n [29,]    0\n [30,]    0\n [31,]    0\n [32,]    0\n [33,]    0\n [34,]    0\n [35,]    0\n [36,]    0\n [37,]    0\n [38,]    0\n [39,]    0\n [40,]    0\n [41,]    0\n [42,]    0",
        "\n [43,]    0\n [44,]    0\n [45,]    0\n [46,]    0\n [47,]    0\n [48,]    0\n [49,]    0\n [50,]    0\n [51,]    0\n [52,]    0\n [53,]    0\n [54,]    0\n [55,]    0\n [56,]    0\n [57,]    0\n [58,]    0\n [59,]    0\n [60,]    1\n [61,]    1\n [62,]    1\n [63,]    1\n [64,]    1\n [65,]    1\n [66,]    1\n [67,]    1\n [68,]    1\n [69,]    1\n [70,]    1\n [71,]    1\n [72,]    1\n [73,]    0\n [74,]    0\n [75,]    0\n [76,]    0\n [77,]    0\n [78,]    0\n [79,]    0\n [80,]    0\n [81,]    0\n [82,]    0\n [83,]    0\n [84,]    0\n [85,]    0",
        "\n [86,]    0\n [87,]    0\n [88,]    0\n [89,]    0\n [90,]    0\n [91,]    0\n [92,]    0\n [93,]    0\n [94,]    0\n [95,]    0\n [96,]    0\n [97,]    0\n [98,]    0\n [99,]    0\n[100,]    0\n[101,]    0\n[102,]    0\n[103,]    0\n[104,]    0\n[105,]    0\n[106,]    0\n[107,]    0\n[108,]    0\n[109,]    0\n[110,]    0\n[111,]    0\n[112,]    0\n[113,]    0\n[114,]    0\n[115,]    0\n[116,]    0\n[117,]    0\n[118,]    0\n[119,]    0\n[120,]    1\n[121,]    1\n[122,]    1\n[123,]    1\n[124,]    1\n[125,]    1\n[126,]    1\n[127,]    1\n[128,]    1",
        "\n[129,]    1\n[130,]    1\n[131,]    1\n[132,]    1\n[133,]    1\n[134,]    1\n[135,]    1\n[136,]    1\n[137,]    1\n[138,]    0\n[139,]    0\n[140,]    0\n[141,]    0\n[142,]    0\n[143,]    0\n[144,]    0\n[145,]    0\n[146,]    0\n[147,]    0\n[148,]    0\n[149,]    0\n[150,]    0\n[151,]    0\n[152,]    0\n[153,]    0\n[154,]    0\n[155,]    0\n[156,]    0\n[157,]    0\n[158,]    0\n[159,]    0\n[160,]    0\n[161,]    0\n[162,]    0\n[163,]    0\n[164,]    0\n[165,]    0\n[166,]    0\n[167,]    0\n[168,]    0\n[169,]    0\n[170,]    0\n[171,]    0",
        "\n[172,]    0\n[173,]    0\n[174,]    0\n[175,]    0\n[176,]    0\n[177,]    0\n[178,]    0\n[179,]    0\n[180,]    0\n[181,]    0\n[182,]    1\n[183,]    1\n[184,]    1\n[185,]    1\n[186,]    1\n[187,]    1\n[188,]    1\n[189,]    1\n[190,]    1\n[191,]    1\n[192,]    1\n[193,]    1\n[194,]    1\n[195,]    1\n[196,]    1\n[197,]    1\n[198,]    1\n[199,]    1\n[200,]    1\n[201,]    1\n[202,]    1\n[203,]    1\n[204,]    1\n[205,]    1\n[206,]    1\n[207,]    1\n[208,]    1\n[209,]    1\n[210,]    0\n[211,]    0\n[212,]    0\n[213,]    0\n[214,]    0",
        "\n[215,]    0\n[216,]    0\n[217,]    0\n[218,]    0\n[219,]    0\n[220,]    0\n[221,]    0\n[222,]    0\n[223,]    0\n[224,]    0\n[225,]    0\n[226,]    0\n[227,]    0\n[228,]    0\n[229,]    0\n[230,]    0\n[231,]    0\n[232,]    0\n[233,]    0\n[234,]    0\n[235,]    0\n[236,]    0\n[237,]    0\n[238,]    1\n[239,]    1\n[240,]    1\n[241,]    1\n[242,]    1\n[243,]    1\n[244,]    1\n[245,]    1\n[246,]    1\n[247,]    1\n[248,]    1\n[249,]    1\n[250,]    1\n[251,]    1\n[252,]    1\n[253,]    1\n[254,]    1\n[255,]    1\n[256,]    1\n[257,]    1",
        "\n[258,]    1\n[259,]    1\n[260,]    1\n[261,]    1\n[262,]    1\n[263,]    1\n[264,]    1\n[265,]    1\n[266,]    1\n[267,]    1\n[268,]    1\n[269,]    1\n[270,]    1\n[271,]    1\n[272,]    1\n[273,]    1\n[274,]    1\n[275,]    1\n[276,]    1\n[277,]    1\n[278,]    1\n[279,]    1\n[280,]    1\n[281,]    1\n[282,]    1\n[283,]    1\n[284,]    1\n[285,]    1\n[286,]    1\n[287,]    1\n[288,]    1\n[289,]    1\n[290,]    0\n[291,]    0\n[292,]    0\n[293,]    0\n[294,]    0\n[295,]    0\n[296,]    0\n[297,]    0\n[298,]    0\n[299,]    0\n[300,]    0",
        "\n[301,]    1\n[302,]    1\n[303,]    1\n[304,]    1\n[305,]    1\n[306,]    1\n[307,]    1\n[308,]    1\n[309,]    1\n[310,]    1\n[311,]    1\n[312,]    1\n[313,]    1\n[314,]    1\n[315,]    1\n[316,]    1\n[317,]    1\n[318,]    1\n[319,]    1\n[320,]    1\n[321,]    1\n[322,]    1\n[323,]    1\n[324,]    1\n[325,]    1\n[326,]    1\n[327,]    1\n[328,]    1\n[329,]    1\n[330,]    1\n[331,]    1\n[332,]    1\n[333,]    1\n[334,]    1\n[335,]    1\n[336,]    1\n[337,]    1\n[338,]    1\n[339,]    1\n[340,]    1\n[341,]    1\n[342,]    1\n[343,]    1",
        "\n[344,]    1\n[345,]    1\n[346,]    1\n[347,]    1\n[348,]    1\n[349,]    1\n[350,]    1\n[351,]    1\n[352,]    1\n[353,]    1\n[354,]    0\n[355,]    0\n[356,]    0\n[357,]    0\n[358,]    0\n[359,]    0\n[360,]    1\n[361,]    1\n[362,]    1\n[363,]    1\n[364,]    1\n[365,]    1\n[366,]    1\n[367,]    1\n[368,]    1\n[369,]    1\n[370,]    1\n[371,]    1\n[372,]    1\n[373,]    1\n[374,]    1\n[375,]    1\n[376,]    1\n[377,]    1\n[378,]    1\n[379,]    1\n[380,]    1\n[381,]    1\n[382,]    1\n[383,]    1\n[384,]    1\n[385,]    1\n[386,]    1",
        "\n[387,]    1\n[388,]    1\n[389,]    1\n[390,]    1\n[391,]    1\n[392,]    1\n[393,]    1\n[394,]    1\n[395,]    1\n[396,]    1\n[397,]    1\n[398,]    1\n[399,]    1\n[400,]    1\n[401,]    1\n[402,]    1\n[403,]    1\n[404,]    1\n[405,]    1\n[406,]    1\n[407,]    1\n[408,]    1\n[409,]    1\n[410,]    1\n[411,]    1\n[412,]    1\n[413,]    1\n[414,]    1\n[415,]    1\n[416,]    1\n[417,]    1\n[418,]    1\n[419,]    1\n[420,]    1\n[421,]    0\n[422,]    1\n[423,]    1\n[424,]    1\n[425,]    1\n[426,]    1\n[427,]    1\n[428,]    1\n[429,]    1",
        "\n[430,]    1\n[431,]    1\n[432,]    1\n[433,]    1\n[434,]    1\n[435,]    1\n[436,]    1\n[437,]    1\n[438,]    1\n[439,]    1\n[440,]    1\n[441,]    1\n[442,]    1\n[443,]    1\n[444,]    1\n[445,]    1\n[446,]    1\n[447,]    1\n[448,]    1\n[449,]    1\n[450,]    1\n[451,]    1\n[452,]    1\n[453,]    1\n[454,]    1\n[455,]    1\n[456,]    1\n[457,]    1\n[458,]    1\n[459,]    1\n[460,]    1\n[461,]    1\n[462,]    1\n[463,]    1\n[464,]    1\n[465,]    1\n[466,]    1\n[467,]    1\n[468,]    1\n[469,]    1\n[470,]    1\n[471,]    1\n[472,]    1",
        "\n[473,]    1\n[474,]    1\n[475,]    1\n[476,]    1\n[477,]    1\n[478,]    1\n[479,]    1\n[480,]    1\n[481,]    1\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x5596bedbf590>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = X, Y_M = Y) : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "# Using modules",
        "> ",
        "# We need to tell R that we want to use a C++11 compiler ",
        "> ",
        "Sys.setenv(\"PKG_CXXFLAGS\"=\"-std=c++11\")",
        "> ",
        "pkgbuild::compile_dll()",
        "> ",
        "compileAttributes()",
        "Warning message:\n",
        "The following packages are referenced using Rcpp::depends attributes however are not listed in the Depends, Imports or LinkingTo fields of the package DESCRIPTION file: BH \n",
        "\nRestarting R session...\n\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "library(pack)",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = X, Y_M = Y) : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x558bb1e6bd10>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = X, Y_M = Y) : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = X, Y_M = Y) : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "> ",
        "# dist3$InverseLinkCumulativeFunction(vector = c(1,2,8,9,5,5,4,8,8,9,5,10))",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       # X_M  = matrix(1:9, nrow = 3, ncol = 3), ",
        "+ ",
        "                       X_M = matrix(c(1,8,3)),",
        "+ ",
        "                       Y_M = matrix(c(1,2,8)))",
        "\nerror: ",
        "Mat::init(): requested size is not compatible with column vector layout",
        "\n",
        "Error in dist3$VarianceBinomial(vectordis = c(1, 2, 8), X_M = matrix(c(1,  : \n  Mat::init(): requested size is not compatible with column vector layout\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x556714229b30>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "  -14.8662\n    8.3792\n  -22.5310\n   12.7036\n  -27.4142\n   15.4621\n  -30.5464\n   17.2330\n  -32.4661\n   18.3190\n  -33.5780\n   18.9481\n  -34.1921\n   19.2956\n  -34.5204\n   19.4814\n  -34.6925\n   19.5788\n  -34.7818\n   19.6293\n  -34.8278\n   19.6553\n  -34.8514\n   19.6687\n  -34.8636\n   19.6756\n  -34.8698\n   19.6791\n  -34.8730\n   19.6809\n  -34.8746\n   19.6818\n  -34.8754\n   19.6823\n  -34.8759\n   19.6825\n  -34.8761\n   19.6827\n  -34.8762\n   19.6827\n  -34.8762\n   19.6827\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763",
        "\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n  -34.8763\n   19.6828\n          [,1]\n[1,] -34.87630\n[2,]  19.68278\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x55e5bde9d640>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "  -14.8662\n    8.3792inf\n\n  -22.5310\n   12.70360.515709\n\n  -27.4142\n   15.4621\n0.216832\n  -30.5464\n   17.23300.114321\n\n  -32.4661\n   18.31900.0628873\n\n  -33.5780\n   18.94810.0342702\n\n  -34.19210.0183014\n\n   19.2956\n  -34.5204\n0.00960922\n   19.4814\n  -34.6925\n   19.57880.0049898\n\n  -34.7818\n   19.6293\n0.0025744\n  -34.8278\n   19.65530.0013235\n\n  -34.8514\n   19.66870.000679114\n\n          [,1]\n[1,] -34.85144\n[2,]  19.66872\n\nRestarting R session...\n\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "library(pack)",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x561bf35c1970>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "  -14.8662\n    8.3792inf\n\n  -22.5310\n   12.70360.515709\n\n  -27.4142\n   15.46210.216832\n\n  -30.5464\n   17.23300.114321\n\n  -32.4661\n   18.31900.0628873\n\n  -33.5780\n   18.94810.0342702\n\n  -34.1921\n0.0183014\n   19.2956\n  -34.5204\n0.00960922\n   19.4814\n  -34.6925\n   19.57880.0049898\n\n  -34.7818\n0.0025744\n   19.6293\n  -34.8278\n   19.6553\n0.0013235\n  -34.85140.000679114\n\n   19.6687\n          [,1]\n[1,] -34.85144\n[2,]  19.66872\n\nRestarting R session...\n\n",
        "> ",
        "library(pack)",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x561c226f40e0>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "inf\n0.515709\n0.216832\n0.114321\n0.0628873\n0.0342702\n0.0183014\n0.00960922\n0.0049898\n0.0025744\n0.0013235\n0.000679114\n          [,1]\n[1,] -34.85144\n[2,]  19.66872\n\nRestarting R session...\n\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "> ",
        "library(pack)",
        "> ",
        "FisherScoring",
        "C++ class 'FisherScoring' <0x562a0b6fd720>\nConstructors:\n    FisherScoring()\n\nFields: No public fields exposed by this class\n\nMethods: \n     arma::Col<double> InverseLinkCumulativeFunction(arma::Col<double>)  \n           \n     arma::Mat<double> VarianceBinomial(arma::Col<double>, arma::Mat<double>, arma::Mat<double>)  \n           \n",
        "> ",
        "dist3 <- new(FisherScoring)",
        "Distribution is being created\nLogistic is being created\nDistribution is being created\nProbit is being created\nFisherScoring is being created\n",
        "> ",
        "dist3$VarianceBinomial(vectordis = c(1,2,8), ",
        "+ ",
        "                       X_M = X,",
        "+ ",
        "                       Y_M = Y)",
        "inf\n0.515709\n0.216832\n0.114321\n0.0628873\n0.0342702\n0.0183014\n0.00960922\n0.0049898\n0.0025744\n0.0013235\n0.000679114\n          [,1]\n[1,] -34.85144\n[2,]  19.66872\n",
        "> ",
        "devtools::load_all(\".\")",
        "Loading pack\n",
        "Your system is ready to build packages!\n",
        "Re-compiling pack\n",
        "Your system is ready to build packages!\n",
        "  \r[38;5;247m─[39m[38;5;247m  [39m[38;5;247minstalling *source* package ‘pack’ ...[39m[36m[39m\n\r  \r   ** libs\n\r  \r   g++  -I/usr/share/R/include -DNDEBUG  -I\"/home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include\" -I\"/home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include\" -I\"/home/leonvelasco/R/x86_64-pc-linux-gnu-library/3.4/RcppEigen/include\"   -std=c++11 -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-AitvI6/r-base-3.4.4=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -UNDEBUG -Wall -pedantic -g -O0 -fdiagnostics-color=always -c RcppExports.cpp -o RcppExports.o",
        "\n\r\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        2,
        2
    ]
}